Programming terminologies
-------------------------

Language
--------

 -> It is a communication medium.

 -> Alphabets, digits, characters (sumbols), words, statements and sentences are formed
    using some rigid (fixed) rules is known as language. These rigid rules also known
    as Grammar or Syntax.

 -> The computer language is made up of similarly featured Grammar/syntax scheme.

 -> There are two major types of languages in Computer:

     1. Low-level language - Instructions and data are represented by the "binary
				number system".
			   - It is the language of "Hardware" and "OS".
			   - It is also known as "Native Language".
			   - Low-level language is very difficult to learn because
			     know how of the Hardware is required.
    2. High-level language - Instructions and data are represented by the "English like
				Language" (Not extacly the English).

			   - High-level language has a special tool called "Translator"
			     which translate instructions of "High-level language"
				into "Low-level or NAtive Language".

			   - To learn the High-level language, no hardware know-how
			      is needed but just basic know-how of "OS" is required.
			   - Example: C, C++, PHP, JavaScript, Java, CSharp (C#),
					VB.NET, Python, Ruby, Go, Kotlin and many
					more are example of High-level language.

	Note: C & C++ Languages support the Low-level as well as High-level
		programming interface and hence they are called "Middle Level 		Languages".

 
Program
-------

 -> A "program" contains instructions & data. It means it is a collection of 	instructions & data to accomplish any task.

 -> There are two forms of programs we'll encountered:

     1. Source program - A source program is a text file that contains instructions
				& data, generally written by the developers using
				High level languages.

			In programming, source programs of different programming languages uses different but meaningful extensions.
		For instance,
			C source programs have .c extension
			C++ source programs have .cpp
			PHP souce programs have .php
			JavaScript source programs have .js
			HTML source program have .html or .htm
			StyleSheet source programs have .css
			Java source programs have .java 

				  
    2. Object Program - An object program is a binary file (not a text or non human 			readable) that contains "binary or native" instructions.

		 An object program is produced or generated by the "translators".
		
		 For example,

	p1.c (Source Program) ----> C Traslator ---> p1.exe (Object/NAtive Program)
			
Translator
----------
 High level languages uses one of the two translators:

  1. Compiler  and 
  2. Interpreter

  1. Compiler - The compiler reads a whole source program at once.
              - The compiles examines syntax rules of each & every instruction of
		source program and if there are syntax mistakes (errors) then it
	  	stops further and display mistake-list or syntax-error-list.

	      - If source program is syntax-error free then the compiler generate
		native/low-level instruction from the source program's high-level
		instructions and save them into an object program file.

	      - And, finally we can execute the "object" program by telling the OS
		to run it.
  2. Interpreter - The Interpreter reads a statement (line) by statement at a time
                 - It examines syntax rule of the statement and if that statement has
		   gramattical/syntax mistakes then it stops and display error message.

		 - If the statement is syntax-error free then it translate that source
		   instruction to an object instruction and then pass that object
		   instructions to the OS so the OS can run it now.

		- Similarly, it reads next statement and perform above mentioned steps
		  repeatedly.
 Example: C,C++, Java etc uses Compiler
          PHP, JavaScript, CSS, HTML, SQL uses interpreters

 